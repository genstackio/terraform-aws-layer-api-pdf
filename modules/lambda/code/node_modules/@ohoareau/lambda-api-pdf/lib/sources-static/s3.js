"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const aws_1 = require("@ohoareau/aws");
const path_1 = require("path");
async function s3(ctx) {
    var _a;
    let { bucket: originalBucket, name, file = undefined } = ctx.query;
    const bucket = (((_a = ctx.config) === null || _a === void 0 ? void 0 : _a.static_buckets) || {})[originalBucket];
    if (!bucket)
        return undefined;
    const x = { bucket: originalBucket, key: name, ttl: 5 * 60 };
    if ('function' === typeof bucket) {
        const r = await bucket(ctx.query, ctx);
        if (!r)
            return undefined;
        Object.assign(x, r);
    }
    return {
        location: (await aws_1.s3.getFileViewUrl({
            ...x,
            contentType: 'application/pdf',
            name: file ? `${path_1.basename(file)}.pdf` : undefined,
        })).viewUrl,
    };
}
exports.s3 = s3;
exports.default = s3;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiczMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvc291cmNlcy1zdGF0aWMvczMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBMEM7QUFFMUMsK0JBQThCO0FBRXZCLEtBQUssVUFBVSxFQUFFLENBQUMsR0FBUTs7SUFDN0IsSUFBSSxFQUFDLE1BQU0sRUFBRSxjQUFjLEVBQUUsSUFBSSxFQUFFLElBQUksR0FBRyxTQUFTLEVBQUMsR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDO0lBQ2pFLE1BQU0sTUFBTSxHQUFHLENBQUMsT0FBQSxHQUFHLENBQUMsTUFBTSwwQ0FBRSxjQUFjLEtBQUksRUFBRSxDQUFDLENBQUMsY0FBYyxDQUFDLENBQUM7SUFDbEUsSUFBSSxDQUFDLE1BQU07UUFBRSxPQUFPLFNBQVMsQ0FBQztJQUM5QixNQUFNLENBQUMsR0FBRyxFQUFDLE1BQU0sRUFBRSxjQUFjLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBYyxDQUFDO0lBQ3hFLElBQUksVUFBVSxLQUFLLE9BQU8sTUFBTSxFQUFFO1FBQzlCLE1BQU0sQ0FBQyxHQUFHLE1BQU0sTUFBTSxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDdkMsSUFBSSxDQUFDLENBQUM7WUFBRSxPQUFPLFNBQVMsQ0FBQztRQUN6QixNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztLQUN2QjtJQUNELE9BQU87UUFDSCxRQUFRLEVBQUUsQ0FBQyxNQUFNLFFBQUssQ0FBQyxjQUFjLENBQUM7WUFDbEMsR0FBRyxDQUFDO1lBQ0osV0FBVyxFQUFFLGlCQUFpQjtZQUM5QixJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLGVBQVEsQ0FBQyxJQUFjLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxTQUFTO1NBQzdELENBQUMsQ0FBQyxDQUFDLE9BQU87S0FDZCxDQUFBO0FBQ0wsQ0FBQztBQWpCRCxnQkFpQkM7QUFFRCxrQkFBZSxFQUFFLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3MzIGFzIGF3c3MzfSBmcm9tICdAb2hvYXJlYXUvYXdzJztcbmltcG9ydCB7Y3R4fSBmcm9tICdAb2hvYXJlYXUvbGFtYmRhLXV0aWxzJztcbmltcG9ydCB7YmFzZW5hbWV9IGZyb20gJ3BhdGgnO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gczMoY3R4OiBjdHgpOiBQcm9taXNlPGFueXx1bmRlZmluZWQ+IHtcbiAgICBsZXQge2J1Y2tldDogb3JpZ2luYWxCdWNrZXQsIG5hbWUsIGZpbGUgPSB1bmRlZmluZWR9ID0gY3R4LnF1ZXJ5O1xuICAgIGNvbnN0IGJ1Y2tldCA9IChjdHguY29uZmlnPy5zdGF0aWNfYnVja2V0cyB8fCB7fSlbb3JpZ2luYWxCdWNrZXRdO1xuICAgIGlmICghYnVja2V0KSByZXR1cm4gdW5kZWZpbmVkO1xuICAgIGNvbnN0IHggPSB7YnVja2V0OiBvcmlnaW5hbEJ1Y2tldCwga2V5OiBuYW1lLCB0dGw6IDUgKiA2MCAvKiA1IG1pbiAqLyB9O1xuICAgIGlmICgnZnVuY3Rpb24nID09PSB0eXBlb2YgYnVja2V0KSB7XG4gICAgICAgIGNvbnN0IHIgPSBhd2FpdCBidWNrZXQoY3R4LnF1ZXJ5LCBjdHgpO1xuICAgICAgICBpZiAoIXIpIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oeCwgcik7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIGxvY2F0aW9uOiAoYXdhaXQgYXdzczMuZ2V0RmlsZVZpZXdVcmwoe1xuICAgICAgICAgICAgLi4ueCxcbiAgICAgICAgICAgIGNvbnRlbnRUeXBlOiAnYXBwbGljYXRpb24vcGRmJyxcbiAgICAgICAgICAgIG5hbWU6IGZpbGUgPyBgJHtiYXNlbmFtZShmaWxlIGFzIHN0cmluZyl9LnBkZmAgOiB1bmRlZmluZWQsXG4gICAgICAgIH0pKS52aWV3VXJsLFxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgczMiXX0=